---
export const getStaticPaths = () => {
  return [];
};

import Layout from '../../layouts/Layout.astro';
import Card from '../../components/ui/Card.astro';
import CardHeader from '../../components/ui/CardHeader.astro';
import CardTitle from '../../components/ui/CardTitle.astro';
import CardContent from '../../components/ui/CardContent.astro';
import Button from '../../components/ui/Button.astro';
import '../../styles/globals.css';

const { token } = Astro.params;
---

<Layout title="Share Your Experience" description="Share your experience working with our developer">
  <div class="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900">
    <div class="container mx-auto py-8 px-4 max-w-2xl">
      <!-- Header -->
      <div class="text-center mb-8">
        <h1 class="text-3xl font-bold text-white mb-2">Share Your Experience</h1>
        <p class="text-gray-400">Your feedback helps us improve and showcases our work</p>
      </div>

      <!-- Loading State -->
      <div id="loading-state" class="text-center">
        <div class="bg-yellow-500/20 border border-yellow-500/50 rounded-xl p-8">
          <p class="text-yellow-400">Loading project details...</p>
        </div>
      </div>

      <!-- Error State -->
      <div id="error-state" class="text-center hidden">
        <div class="bg-red-500/20 border border-red-500/50 rounded-xl p-8">
          <p class="text-red-400">This testimonial link is invalid or has expired.</p>
        </div>
      </div>

      <!-- Website Info -->
      <Card id="website-info" class="mb-8 bg-slate-800/80 backdrop-blur-sm border-slate-700 hidden">
        <CardHeader>
          <CardTitle class="text-white">Project Details</CardTitle>
        </CardHeader>
        <CardContent>
          <div id="website-details" class="flex items-center gap-4 p-4 bg-slate-700/50 rounded">
          </div>
        </CardContent>
      </Card>

      <!-- Testimonial Form -->
      <Card id="testimonial-form-card" class="bg-slate-800/80 backdrop-blur-sm border-slate-700 hidden">
        <CardHeader>
          <CardTitle class="text-white">Your Testimonial</CardTitle>
        </CardHeader>
        <CardContent>
          <form id="testimonial-form" class="space-y-6">
            <input type="hidden" id="website-token" value={token}>
            
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <label class="block text-sm font-medium text-gray-300 mb-2">Your Name *</label>
                <input type="text" id="client-name" required 
                  class="w-full px-3 py-2 bg-slate-700 border border-slate-600 rounded-md text-white 
                         focus:outline-none focus:ring-2 focus:ring-cyan-400 focus:border-transparent">
              </div>
              <div>
                <label class="block text-sm font-medium text-gray-300 mb-2">Email Address *</label>
                <input type="email" id="client-email" required 
                  class="w-full px-3 py-2 bg-slate-700 border border-slate-600 rounded-md text-white 
                         focus:outline-none focus:ring-2 focus:ring-cyan-400 focus:border-transparent">
              </div>
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Profile Picture URL (optional)</label>
              <input type="url" id="client-avatar" 
                class="w-full px-3 py-2 bg-slate-700 border border-slate-600 rounded-md text-white 
                       focus:outline-none focus:ring-2 focus:ring-cyan-400 focus:border-transparent">
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Rating *</label>
              <div id="rating-container" class="flex gap-1 mb-2">
                <button type="button" class="rating-star text-2xl text-gray-400 hover:text-yellow-400" data-rating="1">★</button>
                <button type="button" class="rating-star text-2xl text-gray-400 hover:text-yellow-400" data-rating="2">★</button>
                <button type="button" class="rating-star text-2xl text-gray-400 hover:text-yellow-400" data-rating="3">★</button>
                <button type="button" class="rating-star text-2xl text-gray-400 hover:text-yellow-400" data-rating="4">★</button>
                <button type="button" class="rating-star text-2xl text-gray-400 hover:text-yellow-400" data-rating="5">★</button>
              </div>
              <input type="hidden" id="rating-value" required>
              <p class="text-sm text-gray-400">Click to rate your experience</p>
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">How was your experience working with me? *</label>
              <textarea id="experience" required rows="4" 
                placeholder="Describe your overall experience, communication, professionalism, etc."
                class="w-full px-3 py-2 bg-slate-700 border border-slate-600 rounded-md text-white 
                       focus:outline-none focus:ring-2 focus:ring-cyan-400 focus:border-transparent"></textarea>
            </div>

            <div>
              <label class="block text-sm font-medium text-gray-300 mb-2">Any additional feedback? *</label>
              <textarea id="feedback" required rows="4" 
                placeholder="What did you like most? Any suggestions for improvement? Would you recommend my services?"
                class="w-full px-3 py-2 bg-slate-700 border border-slate-600 rounded-md text-white 
                       focus:outline-none focus:ring-2 focus:ring-cyan-400 focus:border-transparent"></textarea>
            </div>

            <div>
              <Button type="submit" class="w-full bg-cyan-500 hover:bg-cyan-600 text-white">
                Submit Testimonial
              </Button>
            </div>
          </form>
        </CardContent>
      </Card>

      <!-- Success State -->
      <div id="success-state" class="text-center hidden">
        <div class="bg-green-500/20 border border-green-500/50 rounded-xl p-8">
          <div class="text-green-400 text-4xl mb-4">✓</div>
          <h2 class="text-xl font-bold text-white mb-2">Thank You!</h2>
          <p class="text-gray-300">Your testimonial has been submitted successfully and will be featured on the developer page.</p>
        </div>
      </div>
    </div>
  </div>

<script define:vars={{ token }}>
  // DOM elements
  const loadingState = document.getElementById('loading-state');
  const errorState = document.getElementById('error-state');
  const websiteInfo = document.getElementById('website-info');
  const websiteDetails = document.getElementById('website-details');
  const testimonialFormCard = document.getElementById('testimonial-form-card');
  const testimonialForm = document.getElementById('testimonial-form');
  const successState = document.getElementById('success-state');
  const ratingStars = document.querySelectorAll('.rating-star');
  const ratingValue = document.getElementById('rating-value');

  let currentRating = 0;

  // Load website details on page load
  document.addEventListener('DOMContentLoaded', loadWebsiteDetails);

  // Rating functionality
  ratingStars.forEach(star => {
    star.addEventListener('click', (e) => {
      const rating = parseInt(e.target.dataset.rating);
      setRating(rating);
    });

    star.addEventListener('mouseenter', (e) => {
      const rating = parseInt(e.target.dataset.rating);
      highlightStars(rating);
    });
  });

  document.getElementById('rating-container').addEventListener('mouseleave', () => {
    highlightStars(currentRating);
  });

  function setRating(rating) {
    currentRating = rating;
    ratingValue.value = rating;
    highlightStars(rating);
  }

  function highlightStars(rating) {
    ratingStars.forEach((star, index) => {
      if (index < rating) {
        star.classList.add('text-yellow-400');
        star.classList.remove('text-gray-400');
      } else {
        star.classList.add('text-gray-400');
        star.classList.remove('text-yellow-400');
      }
    });
  }

  // Load website details
  async function loadWebsiteDetails() {
    try {
      const response = await fetch(`/api/qeefoat/testimonials?token=${token}`);
      const result = await response.json();
      
      if (result.success) {
        displayWebsiteInfo(result.website);
        loadingState.classList.add('hidden');
        websiteInfo.classList.remove('hidden');
        testimonialFormCard.classList.remove('hidden');
      } else {
        showError();
      }
    } catch (error) {
      console.error('Error loading website details:', error);
      showError();
    }
  }

  // Display website info
  function displayWebsiteInfo(website) {
    websiteDetails.innerHTML = `
      ${website.thumbnail ? `<img src="${website.thumbnail}" alt="${website.name}" class="w-16 h-16 rounded object-cover">` : 
        `<div class="w-16 h-16 bg-slate-600 rounded flex items-center justify-center">
          <svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9v-9m0-9v9"></path>
          </svg>
        </div>`}
      <div>
        <h3 class="text-lg font-semibold text-white">${website.name}</h3>
        <p class="text-cyan-400 text-sm">
          <a href="${website.url}" target="_blank" class="hover:underline">${website.url}</a>
        </p>
        ${website.description ? `<p class="text-gray-400 text-sm mt-1">${website.description}</p>` : ''}
      </div>
    `;
  }

  // Show error state
  function showError() {
    loadingState.classList.add('hidden');
    errorState.classList.remove('hidden');
  }

  // Form submission
  testimonialForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    if (!currentRating) {
      alert('Please select a rating');
      return;
    }

    const formData = {
      token: token,
      clientName: document.getElementById('client-name').value,
      clientEmail: document.getElementById('client-email').value,
      clientAvatar: document.getElementById('client-avatar').value,
      rating: currentRating,
      experience: document.getElementById('experience').value,
      feedback: document.getElementById('feedback').value
    };

    try {
      const response = await fetch('/api/qeefoat/testimonials', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(formData)
      });

      const result = await response.json();
      
      if (result.success) {
        testimonialFormCard.classList.add('hidden');
        websiteInfo.classList.add('hidden');
        successState.classList.remove('hidden');
      } else {
        alert('Error: ' + result.error);
      }
    } catch (error) {
      alert('Error submitting testimonial: ' + error.message);
    }
  });
</script>
</Layout>
